module.exports = `
<!DOCTYPE html>
<html>
<head>
	<title><%options.title%></title>
	<script type="text/javascript" src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
	<script type="text/javascript" src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/3.2.2/js/tabulator.min.js"></script>

	<link href="https://bootswatch.com/4/<%template%>/bootstrap.min.css" rel="stylesheet">
	<link href="https://cdnjs.cloudflare.com/ajax/libs/tabulator/3.2.2/css/bootstrap/tabulator_bootstrap.min.css" rel="stylesheet">

	<style>
		body {
			margin: 5px;
		}

<% if (true) Object.keys(skillRes).forEach(function (skill) { %>
		img.<%skill%>  {
    		content: url(<%skillRes[skill].iconUrl%>);
    		height: 18px;
    		width: 18px;
		}
<% }); %>
	</style>
</head>
<body>
	<header>
		<h3><%options.title%></h3>
		<h4><%options.description%></h4>
	</header>
	<div id="crew-table"></div>
	<br />
<% if (options.shareMissions) { %>
	<div id="missions-table"></div>
<% } %>
	<footer>
		<p>Exported via the <a href="https://iampicard.github.io/">Star Trek Timelines Spreadsheet Tool v<%version%></a> on <%(new Date()).toDateString()%>.</p>
	</footer>

	<script type="text/javascript">
		function starSvg(filled) {
			var star = '<svg xmlns="http://www.w3.org/2000/svg" style="margin:0 1px;" viewBox="0 0 512 512" width="14" height="14" xmlns:xml="http://www.w3.org/XML/1998/namespace" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"><polygon fill="#d2d2d2" stroke="#686868" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="37.6152" points="259.216,29.942 330.27,173.919 489.16,197.007 374.185,309.08 401.33,467.31 259.216,392.612 117.104,467.31 144.25,309.08 29.274,197.007 188.165,173.919" /></svg>';

			if (filled) {
				star = star.replace('#d2d2d2', '#ffea00').replace('#686868', '#c1ab60');
			}

			return star;
		}

		$("#crew-table").tabulator({
			fitColumns: true,
			columns: [
				{
					title: "Portrait", field: "iconUrl", width: 70, headerSort: false, responsive: 5, formatter: function (cell, formatterParams) {
						return "<img src='" + cell.getValue() + "' height='48' />";
					}
				},
				{ title: "Name", field: "name", width: 150, responsive: 0 },
				{ title: "Level", field: "level", width: 80, align: "center", responsive: 1 },
				{
					title: "Rarity", field: "rarity", width: 100, responsive: 2, formatter: function (cell, formatterParams) {
						return starSvg(true).repeat(cell.getValue()) + starSvg(false).repeat(cell.getRow().getData().max_rarity - cell.getValue());
					}
				},
				{ title: "Frozen", field: "frozen", width: 90, formatter: "tick", responsive: 3 },

<% if (true) Object.keys(skillRes).forEach(function (skill) { %>
			{
				title: "<%skillRes[skill].name%>", field: "<%skill%>_core", width: 120, responsive: 4, align: "center", formatter: function (cell, formatterParams) {
					var crew = cell.getRow().getData();
					if (crew.<%skill %>.core > 0)
						return "<img class='<%skill%>' /> <b>" + crew.<%skill %>.core + "</b><br/>+(" + crew.<%skill %>.min + " - " + crew.<%skill %>.max + ")";
					else
						return "";
				}
			},
<% }); %>
			{ title: "Traits", field: "traits", responsive: 6, headerSort: false },
			]
		});

		var tabledata = <%JSON.stringify(roster) %>;

		$("#crew-table").tabulator("setData", tabledata);

<% if (options.shareMissions) { %>
		var skillRes = <%JSON.stringify(skillRes) %>;

			$("#missions-table").tabulator({
				fitColumns: true,
				columns: [
					{ title: "Mission Name", field: "missionname", width: 150, responsive: 0 },
					{ title: "Quest Name", field: "questname", width: 160, responsive: 0 },
					{ title: "Challenge Name", field: "challengename", width: 200, responsive: 0 },
					{
						title: "Quest Progress", field: "goal_progress", width: 160, responsive: 1, formatter: function (cell, formatterParams) {
							return starSvg(true).repeat(cell.getValue()) + starSvg(false).repeat(9 - cell.getValue());
						}
					},
					{
						title: "Skill", field: "skill", width: 110, align: "left", responsive: 1, formatter: function (cell, formatterParams) {
							return "<img class='" + cell.getValue() + "'/>" + skillRes[cell.getValue()].name;
						}
					},
					{ title: "Roll", field: "roll", width: 80, align: "center", responsive: 1 },
					{ title: "Traits", field: "traits", width: 150, responsive: 3, headerSort: false },
					{ title: "Bonus", field: "traitBonus", width: 80, responsive: 3, headerSort: false },
					{
						title: "Restrictions", field: "crew_requirement", responsive: 4, formatter: function (cell, formatterParams) {
							if (cell.getRow().getData().cadet)
								return cell.getValue();
							else
								return cell.getRow().getData().lockedTraits;
						}
					}
				]
			});

			var missionData = <%JSON.stringify(missionList) %>;

			$("#missions-table").tabulator("setData", missionData);
<% } %>
	</script>
</body>
</html>
`;